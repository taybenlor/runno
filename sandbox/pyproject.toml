[project]
name = "runno"
version = "0.1.0"
description = "Run untrusted code inside the Runno WebAssembly sandbox."
authors = [{ name = "Ben Taylor", email = "me@taybenlor.com" }]
maintainers = [{ name = "Ben Taylor", email = "me@taybenlor.com" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.13"
dependencies = ["pydantic~=2.10.4"]
classifiers = [
  "Development Status :: 3 - Alpha",

  "Intended Audience :: Developers",
  "Topic :: System",

  "License :: OSI Approved :: MIT License",

  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
dev = ["black~=24.10.0"]

[project.urls]
Homepage = "https://runno.dev"

[tool.hatch.envs.hatch-test]
dependencies = [
  "coverage-enable-subprocess==1.0",
  "coverage[toml]~=7.4",
  "pytest~=8.1",
  "pytest-mock~=3.12",
  "pytest-randomly~=3.15",
  "pytest-rerunfailures~=14.0",
  "pytest-xdist[psutil]~=3.5",
  "pytest-asyncio",
]

[tool.hatch]
[build-system]
requires = ["hatchling", "hatch-build-scripts"]
build-backend = "hatchling.build"

[[tool.hatch.build.targets.wheel.hooks.build-scripts.scripts]]
out_dir = "runno"
work_dir = "cli"
commands = ["deno task compile"]
artifacts = ["runno"]

# chmod the artifact from previous step (it erases the executable bit)
[[tool.hatch.build.targets.wheel.hooks.build-scripts.scripts]]
work_dir = "runno"
commands = [
  "python -c \"import os; os.name != 'nt' and os.chmod('runno', 0o755)\"",
]
artifacts = []

[tool.hatch.envs.hatch-build]
dependencies = ["deno"]

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/docs", "runno"]

[tool.hatch.build.targets.wheel]
packages = ["runno"]
artifacts = ["runno"]

[tool.hatch.build.targets.wheel.build-data]
pure_python = false
infer_tag = true

[tool.hatch.build.targets.wheel.hooks.custom]
path = "hatch_build.py"

# musllinux is not supported by deno
[tool.cibuildwheel]
skip = "*-musllinux*"

# Make sure deno is installed inside cibuildwheel containers
# Make sure glibc 2.18 is available inside manylinux containers
[tool.cibuildwheel.linux]
before-all = "curl -fsSL https://deno.land/install.sh | sh"
environment = { "PATH" = "$HOME/.deno/bin:$PATH" }
archs = ["aarch64", "x86_64"]                               # TODO: Support ppc64le, s390x, armv7l
manylinux-aarch64-image = "manylinux_2_28"
manylinux-armv7l-image = "manylinux_2_31"
manylinux-ppc64le-image = "manylinux_2_28"
manylinux-pypy_aarch64-image = "manylinux_2_28"
manylinux-pypy_x86_64-image = "manylinux_2_28"
manylinux-s390x-image = "manylinux_2_28"
manylinux-x86_64-image = "manylinux_2_28"
